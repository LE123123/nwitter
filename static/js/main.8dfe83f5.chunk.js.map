{"version":3,"sources":["fbase.js","components/AuthForm.jsx","routes/Auth.jsx","components/Nweet.jsx","components/NweetFactory.jsx","routes/Home.jsx","components/Navigation.jsx","routes/Profile.jsx","components/Router.jsx","components/App.jsx","index.jsx"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","createUser","createUserWithEmailAndPassword","SigninUser","signInWithEmailAndPassword","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","src","width","height","alt","NweetFactory","userObj","attachment","setAttachment","nweet","setNweet","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","console","log","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","eachNweet","Navigation","to","displayName","Profile","refreshUser","ownNweets","setOwnNweets","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","where","getDocs","querySnapshot","newArr","forEach","newObj","docPictureUrl","docText","displayname","updateProfile","heigh","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dfe83f5.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECTED_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\n// auth\nexport const authService = getAuth();\nexport const createUser = createUserWithEmailAndPassword;\nexport const SigninUser = signInWithEmailAndPassword;\n\n// firestore\nexport const dbService = getFirestore();\n\nexport const storageService = getStorage();\n","import React, { useState } from 'react';\nimport { authService, createUser, SigninUser } from 'fbase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUser(authService, email, password);\n      } else {\n        /* eslint-disable-next-line */\n        data = await SigninUser(authService, email, password); // login auto\n      }\n    } catch (error_) {\n      setError(error_.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email || ''}\n          key=\"1\"\n        />\n        <input\n          onChange={onChange}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password || ''}\n          key=\"2\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? 'Create Account' : 'Log In'}\n          key=\"3\"\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { authService } from 'fbase';\nimport {\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  signInWithPopup,\n} from 'firebase/auth';\n\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === 'google') {\n      provider = new GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new GithubAuthProvider();\n    }\n    await signInWithPopup(authService, provider);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button type=\"button\" onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button type=\"button\" onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","// eslint-disable-next-line object-curly-newline\nimport { deleteDoc, doc, getFirestore, updateDoc } from 'firebase/firestore';\nimport React, { useState } from 'react';\nimport { storageService } from 'fbase';\nimport { ref, deleteObject } from 'firebase/storage';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    // eslint-disable-next-line no-alert\n    const ok = window.confirm('삭제하시겠습니까?');\n    if (ok) {\n      await deleteDoc(doc(getFirestore(), `nweets/${nweetObj.id}`));\n      if (nweetObj.attachmentUrl !== '') {\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDoc(doc(getFirestore(), `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input onChange={onChange} value={newNweet || ''} required />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button type=\"button\" onClick={toggleEditing}>\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img\n              src={nweetObj.attachmentUrl}\n              width=\"50px\"\n              height=\"50px\"\n              alt=\"\"\n            />\n          )}\n          {isOwner && (\n            <>\n              <button type=\"button\" onClick={onDeleteClick}>\n                Delete Nweet\n              </button>\n\n              <button type=\"button\" onClick={toggleEditing}>\n                Edit Nweet\n              </button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\nimport { storageService, dbService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addDoc, collection } from 'firebase/firestore';\n\nconst NweetFactory = ({ userObj }) => {\n  const [attachment, setAttachment] = useState('');\n  const [nweet, setNweet] = useState('');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let attachmentUrl = '';\n      if (attachment !== '') {\n        const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n        const uploadFile = await uploadString(fileRef, attachment, 'data_url');\n        attachmentUrl = await getDownloadURL(uploadFile.ref);\n      }\n\n      await addDoc(collection(dbService, 'nweets'), {\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl,\n      });\n      setNweet('');\n      setAttachment('');\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment('');\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={nweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" alt=\"\" />\n          <button type=\"button\" onClick={onClearAttachment}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\n/* eslint-disable-next-line */\nimport { collection, query, onSnapshot, orderBy } from 'firebase/firestore';\nimport Nweet from 'components/Nweet';\n\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(dbService, 'nweets'),\n      orderBy('createdAt', 'desc'),\n    );\n    onSnapshot(q, (snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n    return () => {\n      console.log('deleted Home_Component');\n    };\n  }, []);\n\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((eachNweet) => (\n          <Nweet\n            key={eachNweet.id}\n            nweetObj={eachNweet}\n            isOwner={eachNweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul>\n      <li key=\"Home\">\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li key=\"Profile\">\n        <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable import/no-unresolved */\nimport { authService, dbService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { where, collection, query, orderBy, getDocs } from 'firebase/firestore';\nimport { updateProfile } from 'firebase/auth';\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [ownNweets, setOwnNweets] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const getMyNweets = async () => {\n    const q = query(\n      collection(dbService, 'nweets'),\n      where('creatorId', '==', userObj.uid),\n      orderBy('createdAt', 'asc'),\n    );\n    const querySnapshot = await getDocs(q);\n    let newArr = [];\n    querySnapshot.forEach((doc) => {\n      const newObj = [\n        {\n          docPictureUrl: doc.data().attachmentUrl,\n          docText: doc.data().text,\n        },\n      ];\n      newArr = [...newArr, ...newObj];\n    });\n    setOwnNweets(newArr);\n  };\n  // after the profile component rendering ( componentDidMount )\n  useEffect(() => {\n    getMyNweets();\n    return () => {\n      console.log('컴포넌트에서 사라짐');\n    };\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayname !== newDisplayName) {\n      await updateProfile(userObj, {\n        displayName: newDisplayName, // have to rerendering Navigation Component\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          key=\"1\"\n        />\n        <input type=\"submit\" value=\"Update Profile\" key=\"2\" />\n      </form>\n      {ownNweets.map((nweet) => (\n        <>\n          <h4>{nweet.docText}</h4>\n          {nweet.docPictureUrl !== '' ? (\n            <img src={nweet.docPictureUrl} heigh=\"50px\" width=\"50px\" alt=\" \" />\n          ) : (\n            <h1>Has No Picture</h1>\n          )}\n        </>\n      ))}\n      <button type=\"button\" onClick={onLogOutClick}>\n        Log Out\n      </button>\n    </>\n  );\n};\nexport default Profile;\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\n\nimport React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Navigation from 'components/Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => (\n  <Router>\n    {isLoggedIn && <Navigation userObj={userObj} />}\n    <Switch>\n      {isLoggedIn ? (\n        <>\n          <Route exact path=\"/\">\n            <Home userObj={userObj} />\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile userObj={userObj} refreshUser={refreshUser} />\n          </Route>\n        </>\n      ) : (\n        <>\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n          {/* <Redirect from=\"*\" to=\"/\" /> */}\n        </>\n      )}\n    </Switch>\n  </Router>\n);\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // firebase에서 회원가입, 로그인을 마친 후 누이터에 데이터를 보내주어야 한다.\n\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({ ...user });\n        setUserObj(user);\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({ ...user });\n    setUserObj(user);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        'Initializing ... '\n      )}\n      <footer>\n        &copy;\n        {new Date().getFullYear()}\n        Nwitter\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}